<?php
define('WS_CLI',true);
if(file_exists(__DIR__.'/WordpressStarter.php') && file_exists(__DIR__.'/bootstrap/autoload-cli.php')){
    //Binary in plugin
    require __DIR__ . '/bootstrap/autoload-cli.php';
}elseif(file_exists(__DIR__.'/wp-load.php')){
    //Binary in wp root
    if(file_exists(__DIR__.'/wp-config.php') ||
        (file_exists( dirname( __DIR__ ) . '/wp-config.php' ) && ! file_exists( dirname( __DIR__ ) . '/wp-settings.php' ))
    ){
        //Use wp-load if have valid config
        include __DIR__.'/wp-load.php';
    }else{
        $wps_finder=function(){
            if(defined('WS_DIR')){
                return WS_DIR;
            }
            $directories=[__DIR__,__DIR__.'/wp-content/plugins'];
            $found=null;
            foreach ($directories as $directory) {
                $handle = @opendir($directory);
                if (!$handle) {
                    return null;
                }
                while (false !== ($entry = @readdir($handle))) {
                    if ($entry != "." && $entry != ".." && file_exists($directory . "/" . $entry . "/WordpressStarter.php")) {
                        @closedir($handle);
                        $found = $directory . "/" . $entry;
                        break 2;
                    }
                }
                @closedir($handle);
            }
            return $found;
        };
        $wps_base_path=$wps_finder();
        if($wps_base_path){
            define('WS_DIR',$wps_base_path);
        }
        unset($wps_finder);
        unset($wps_base_path);

    }

}

$kernel=null;
if(class_exists('WordpressStarter')){//Plugin activated
    $kernel=WordpressStarter::make()->kernel();
}elseif(defined('WS_DIR') && file_exists(WS_DIR . '/bootstrap/autoload.php')){
    require WS_DIR . '/bootstrap/autoload.php';
    $app = require_once WS_DIR.'/bootstrap/app.php';
    $kernel = $app->make(WpStarter\Contracts\Console\Kernel::class);
}
if(empty($kernel)){
    if(defined('ABSPATH')){
        echo "\033[33mThe plugin is not activated\033[0m".PHP_EOL;
    }else{
        echo "\033[33mWordpress not found, please install WpStarter inside WordPress directory \033[0m".PHP_EOL;
    }
    return ;
}
/*
|--------------------------------------------------------------------------
| Run The Artisan Application
|--------------------------------------------------------------------------
|
| When we run the console application, the current CLI command will be
| executed in this console and the response sent back to a terminal
| or another output device for the developers. Here goes nothing!
|
*/

$status = $kernel->handle(
    $input = new Symfony\Component\Console\Input\ArgvInput,
    new Symfony\Component\Console\Output\ConsoleOutput
);

/*
|--------------------------------------------------------------------------
| Shutdown The Application
|--------------------------------------------------------------------------
|
| Once Artisan has finished running, we will fire off the shutdown events
| so that any final work may be done by the application before we shut
| down the process. This is the last thing to happen to the request.
|
*/

$kernel->terminate($input, $status);

exit($status);
