<?php
/**
 * We are in CLI
 */
define('WS_CLI',true);

/**
 * -----------------
 * Find basedir WS_DIR
 * ----------------
 * If no WS_DIR defined we try to locate it
 */
if(!defined('WS_DIR')) {
    $wpsFinder = function () {
        if (file_exists(__DIR__ . '/WordpressStarter.php')) {
            return __DIR__;
        }
        $directories = [__DIR__, __DIR__ . '/wp-content/plugins'];
        $found = null;
        foreach ($directories as $directory) {
            $handle = @opendir($directory);
            if (!$handle) {
                return null;
            }
            while (false !== ($entry = @readdir($handle))) {
                if ($entry != "." && $entry != ".." && file_exists($directory . "/" . $entry . "/WordpressStarter.php")) {
                    @closedir($handle);
                    $found = $directory . "/" . $entry;
                    break 2;
                }
            }
            @closedir($handle);
        }
        return $found;
    };
    if ($wpsBasePath = $wpsFinder()) {
        define('WS_DIR', $wpsBasePath);
    }
    unset($wpsFinder);
    unset($wpsBasePath);
}
/**
 * Autoload and obtains kernel
 */

if(defined('WS_DIR')) {
    require WS_DIR . '/bootstrap/autoload.php';
    $kernel=WordpressStarter::make()->kernel();
}
/**
 * Cannot obtain kernel exit with code 255
 */
if(empty($kernel)){
    echo "\033[33mWordpress not found, please install WpStarter inside WordPress directory \033[0m".PHP_EOL;
    exit(255) ;
}
/**
 * Check if plugin not activated and we use binary in root to run
 */

if( (!defined('WS_CLI_ALWAYS_ENABLED') || !WS_CLI_ALWAYS_ENABLED)//Not always enabled
    && (defined('ABSPATH') && ABSPATH ===__DIR__.'/') // and binary in root
    && !defined('__WS_FILE__') // and plugin not activated
){
    echo "\033[33mThe plugin is not activated\033[0m".PHP_EOL;
    exit(254) ;
}
/*
|--------------------------------------------------------------------------
| Run The Artisan Application
|--------------------------------------------------------------------------
|
| When we run the console application, the current CLI command will be
| executed in this console and the response sent back to a terminal
| or another output device for the developers. Here goes nothing!
|
*/

$status = $kernel->handle(
    $input = new Symfony\Component\Console\Input\ArgvInput,
    new Symfony\Component\Console\Output\ConsoleOutput
);

/*
|--------------------------------------------------------------------------
| Shutdown The Application
|--------------------------------------------------------------------------
|
| Once Artisan has finished running, we will fire off the shutdown events
| so that any final work may be done by the application before we shut
| down the process. This is the last thing to happen to the request.
|
*/

$kernel->terminate($input, $status);

exit($status);
